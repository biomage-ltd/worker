# Create builder step
# pull official base image and use it as builder
FROM r-base:4.0.2 AS builder
WORKDIR /src

# install required debian packages to make R packages work
COPY ./setup ./setup
COPY requirements_debian.txt .
RUN cat requirements_debian.txt | xargs ./setup/install_debian_packages.sh

# install required R packages for the worker.
# these are sectioned as seen here so we can cache compiled code
#
# NOTE: add new packages to the END of this list. this makes sure
# previously installed packages don't get recompiled for no reason.
#
ARG GITHUB_PAT
ENV GITHUB_PAT $GITHUB_PAT
RUN Rscript setup/install_or_die.r devtools
RUN Rscript setup/install_or_die.r BiocManager
RUN R -e 'BiocManager::install(c("BiocGenerics", "GO.db"))'
RUN Rscript setup/install_or_die.r Seurat
RUN Rscript setup/install_or_die.r gprofiler2
RUN Rscript setup/install_or_die.r RJSONIO
RUN Rscript setup/install_or_die.r sccore
RUN Rscript setup/install_or_die.r remoter

# ---------------------------------------------------
# PRODUCTION BUILD
# ---------------------------------------------------
FROM builder AS prod

# start app
CMD R -e 'require(remoter); remoter::server(port=6969)'


# ---------------------------------------------------
# DEVELOPMENT BUILD
# ---------------------------------------------------
FROM builder AS dev

# install Radian for interactive R shell
# also install watchdog to automatically restart
# when source files change
RUN pip install -U jedi radian PyYAML watchdog[watchmedo]

# start app
CMD R -e 'require(remoter); remoter::server(port=6969)'
