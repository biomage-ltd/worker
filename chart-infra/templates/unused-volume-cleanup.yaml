apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: unused-volume-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: unused-volume-cleanup
          restartPolicy: OnFailure
          containers:
          - name: unused-volume-cleanup
            image: dtzar/helm-kubectl:3.3.1
            args:
            - /bin/sh
            - -c
            - |
              kubectl describe -n {{ .Release.Namespace }} pvc | grep -E "^Name:.*$|^Namespace:.*$|^Mounted By:.*$" | grep -B 2 "<none>" | grep -E "^Name:.*$|^Namespace:.*$" | cut -f2 -d: | paste -d " " - - | xargs -n2 bash -c 'kubectl -n ${1} delete pvc ${0}' || true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: unused-volume-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: unused-volume-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: unused-volume-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    sandboxId: "{{ .Values.sandboxId }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: unused-volume-cleanup
subjects:
- kind: ServiceAccount
  name: unused-volume-cleanup
  namespace: {{ .Release.Namespace }}